?interactive()
interactive()
!interactive()
source("/media/sergej/My Book/Programming/r_geneexpression_sample/genexpression_sample/src/main.R")
main <- function(){
print("hello world")
}
if(!interactive()){
main()
}
main <- function(){
print("hello world")
}
if(interactive()){
main()
}
source("src/main.R")
main()
source("src/main.R")
main()
source("src/main.R")
main()
source("src/main.R")
main()
source("src/main.R")
main()
main <- function(){
print("hello world")
}
if(!interactive()){
main()
}
sys.nframe()
?sys.nframe()
main <- function(){
print("hello world")
}
if(sys.nframe()==0){
main()
}
main <- function(){
print("hello world")
}
if(sys.nframe()==1){
main()
}
main <- function(){
print("hello world")
}
if(sys.nframe()==0){
main()
}
source("src/main.R")
main()
source("src/main.R")
main()
source("src/main.R")
main()
source("src/main.R")
main()
source("src/main.R")
main()
source("src/main.R")
main()
BiocManager::install("DESeq2")
BiocManager::install("DESeq2")
start_time_main <- Sys.time()
end_time_main <- Sys.time()
cat(r"{the start_time_main}")
start_time_main <- Sys.time()
end_time_main <- Sys.time()
delta_main_time <- end_time_main - start_time_main
cat(paste("\nThe total time of all scripts:",delta_main_time,"s\n"))
start_time_main <- Sys.time()
end_time_main <- Sys.time()
delta_main_time <- end_time_main - start_time_main
cat(paste0("\nThe total time of all scripts: ",delta_main_time," s.\n"))
start_time_main <- Sys.time()
end_time_main <- Sys.time()
delta_main_time <- end_time_main - start_time_main
cat(paste0("\nThe total time of all scripts: ",delta_main_time,"s.\n"))
start_fetch_ge <- Sys.time()
message("Downloading Data from Array Express")
end_fetch_ge <- Sys.time()
delta_fetch_time <- end_fetch_ge - start_fetch_ge
cat(paste0("\n Time it took to download data: ",end_fetch_ge,"s.|n"))
?sink
start_fetch_ge <- Sys.time()
message("Downloading Data from Array Express")
end_fetch_ge <- Sys.time()
delta_fetch_time <- end_fetch_ge - start_fetch_ge
sink(file="time_taken.txt")
cat(paste0("\n Fetch_GEdata.R: ",end_fetch_ge,"s.|n"))
sink()
# Script to initialize some important files or aparameters if needed
sink("time_taken.txt")
cat("TIME FOR CODE EXECUTION")
sink()
# Script to initialize some important files or aparameters if needed
sink("time_taken.txt")
cat("TIME FOR CODE EXECUTION")
sink()
start_fetch_ge <- Sys.time()
message("Downloading Data from Array Express")
end_fetch_ge <- Sys.time()
delta_fetch_time <- end_fetch_ge - start_fetch_ge
sink(file="time_taken.txt")
cat(paste0("\n Fetch_GEdata.R: ",end_fetch_ge,"s.|n"))
sink()
rm(list=ls())
# load all libraries
library(GEOquery)
# paramaters
download_data <- TRUE # set to TRUE if data is not fetched already
start_time_main <- Sys.time()
source("src/initial.R")
if(download_data){
source("src/fetch_GEdata.R")
}
end_time_main <- Sys.time()
delta_main_time <- end_time_main - start_time_main
sink("time_taken.txt",append = TRUE)
cat(paste0("\nThe total time of all scripts: ",delta_main_time,"s.\n"))
sink()
rm(list=ls())
# load all libraries
library(GEOquery)
# paramaters
download_data <- TRUE # set to TRUE if data is not fetched already
start_time_main <- Sys.time()
source("src/initial.R")
if(download_data){
source("src/fetch_GEdata.R")
}
end_time_main <- Sys.time()
delta_main_time <- end_time_main - start_time_main
sink("time_taken.txt",append = TRUE)
cat(paste0("\nThe total time of all scripts: ",delta_main_time,"s.\n"))
sink()
Sys.time()
Sys.time()
Sys.time("%H:%M:%S")
format(Sys.time(),"%H:%M:%S")
rm(list=ls())
# load all libraries
library(GEOquery)
# paramaters
download_data <- TRUE # set to TRUE if data is not fetched already
start_time_main <- format(Sys.time(),"%H:%M:%S")
source("src/initial.R")
if(download_data){
source("src/fetch_GEdata.R")
}
format(Sys.time(),"%H:%M:%S")
rm(list=ls())
# load all libraries
library(GEOquery)
# paramaters
download_data <- TRUE # set to TRUE if data is not fetched already
start_time_main <- Sys.time()
source("src/initial.R")
if(download_data){
source("src/fetch_GEdata.R")
}
end_time_main <- Sys.time()
delta_main_time <- end_time_main - start_time_main
sink("time_taken.txt",append = TRUE)
cat(paste0("\nThe total time of all scripts: ",delta_main_time,"s.\n"))
sink()
proc.time()
proc.time() - proc.time()
proc.time()[[1]]
proc.time()[[1]]
system.time(print("hello"))
start_fetch_ge <- Sys.time()
message("Downloading Data from Array Express")
end_fetch_ge <- Sys.time()
sink(file="time_taken.txt",append = TRUE)
cat(paste0(round(as.numeric(difftime(time1 = end_fetch_ge, time2 = start_fetch_ge, units = "secs")), 3), " Seconds"))
sink()
start_fetch_ge <- Sys.time()
message("Downloading Data from Array Express")
end_fetch_ge <- Sys.time()
sink(file="time_taken.txt",append = TRUE)
cat(paste0("Fetch_GEdata.R: ",round(as.numeric(difftime(time1 = end_fetch_ge, time2 = start_fetch_ge, units = "secs")), 4), " Seconds"))
sink()
start_fetch_ge <- Sys.time()
message("Downloading Data from Array Express")
end_fetch_ge <- Sys.time()
sink(file="time_taken.txt",append = TRUE)
cat(paste0("Fetch_GEdata.R: ",as.numeric(difftime(time1 = end_fetch_ge, time2 = start_fetch_ge, units = "secs")), " Seconds"))
sink()
start_fetch_ge <- Sys.time()
message("Downloading Data from Array Express")
end_fetch_ge <- Sys.time()
sink(file="time_taken.txt",append = TRUE)
cat(paste0("Fetch_GEdata.R: ",as.numeric(difftime(time1 = end_fetch_ge, time2 = start_fetch_ge, units = "secs")), " Seconds"))
sink()
rm(list=ls())
# load all libraries
library(GEOquery)
# paramaters
download_data <- TRUE # set to TRUE if data is not fetched already
start_time_main <- Sys.time()
source("src/initial.R")
if(download_data){
source("src/fetch_GEdata.R")
}
end_time_main <- Sys.time()
sink("time_taken.txt",append = TRUE)
cat(paste0("The total time of all scripts: ",as.numeric(difftime(time1 = end_time_main, time2 = start_time_main, units = "secs")), " Seconds"))
sink()
rm(list=ls())
# load all libraries
library(GEOquery)
# paramaters
download_data <- TRUE # set to TRUE if data is not fetched already
start_time_main <- Sys.time()
source("src/initial.R")
if(download_data){
source("src/fetch_GEdata.R")
}
end_time_main <- Sys.time()
sink("time_taken.txt",append = TRUE)
cat(paste0("\nThe total time of all scripts: ",as.numeric(difftime(time1 = end_time_main, time2 = start_time_main, units = "secs")), " Seconds"))
sink()
rm(list=ls())
# load all libraries
library(GEOquery)
# paramaters
download_data <- TRUE # set to TRUE if data is not fetched already
start_time_main <- Sys.time()
source("src/initial.R")
if(download_data){
source("src/fetch_GEdata.R")
}
end_time_main <- Sys.time()
sink("time_taken.txt",append = TRUE)
cat(paste0("\nThe total time of all scripts: ",as.numeric(difftime(time1 = end_time_main, time2 = start_time_main, units = "secs")), " Seconds"))
sink()
# Script to initialize some important files or aparameters if needed
sink("time_taken.txt")
cat("TIME FOR CODE EXECUTION\n\n")
sink()
rm(list=ls())
# load all libraries
library(GEOquery)
# paramaters
download_data <- TRUE # set to TRUE if data is not fetched already
start_time_main <- Sys.time()
source("src/initial.R")
if(download_data){
source("src/fetch_GEdata.R")
}
end_time_main <- Sys.time()
sink("time_taken.txt",append = TRUE)
cat(paste0("\nThe total time of all scripts: ",as.numeric(difftime(time1 = end_time_main, time2 = start_time_main, units = "secs")), " Seconds"))
sink()
rm(list=ls())
# load all libraries
library(GEOquery)
# paramaters
download_data <- TRUE # set to TRUE if data is not fetched already
start_time_main <- Sys.time()
source("src/initial.R")
if(download_data){
source("src/fetch_GEdata.R")
}
end_time_main <- Sys.time()
sink("time_taken.txt",append = TRUE)
cat(paste0("\nThe total time of all scripts: ",as.numeric(difftime(time1 = end_time_main, time2 = start_time_main, units = "secs")), " Seconds"))
sink()
geo <- getGEO(GEO = 'GSE183947',GSEMatrix = TRUE)
View(geo)
geo[["GSE183947_series_matrix.txt.gz"]]
saveRDS(geo,file = "data/")
saveRDS(geo,file = 'data/geo_raw.rds')
rm(list=ls())
# load all libraries
library(GEOquery)
# paramaters
download_data <- TRUE # set to TRUE if data is not fetched already
start_time_main <- Sys.time()
source("src/initial.R")
if(download_data){
source("src/fetch_GEdata.R")
}
end_time_main <- Sys.time()
sink("time_taken.txt",append = TRUE)
cat(paste0("\nThe total time of all scripts: ",as.numeric(difftime(time1 = end_time_main, time2 = start_time_main, units = "secs")), " Seconds"))
sink()
file.remove("time_taken.txt")
